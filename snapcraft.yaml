# Copyright 2025 Clidey, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: whodb
adopt-info: versioner
summary: Lightweight database management tool
description: |
  WhoDB is a lightweight, next-generation database management tool for
  developers and database administrators. It provides an intuitive interface
  for managing multiple database types including PostgreSQL, MySQL, SQLite,
  MongoDB, Redis, and more.

base: core24
confinement: strict
grade: stable
title: WhoDB
license: Apache-2.0
contact: mailto:support@whodb.com
website: https://whodb.com
source-code: https://github.com/clidey/whodb
issues: https://github.com/clidey/whodb/issues
donation: https://github.com/sponsors/clidey
icon: linux/icon.png

platforms:
  amd64:
    build-on: [ amd64 ]
    build-for: [ amd64 ]
  arm64:
    build-on: [ arm64 ]
    build-for: [ arm64 ]

layout:
  /usr/lib/x86_64-linux-gnu/webkit2gtk-4.1:
    bind: $SNAP/usr/lib/x86_64-linux-gnu/webkit2gtk-4.1
  /usr/lib/aarch64-linux-gnu/webkit2gtk-4.1:
    bind: $SNAP/usr/lib/aarch64-linux-gnu/webkit2gtk-4.1
  /usr/libexec/webkit2gtk-4.1:
    bind: $SNAP/usr/libexec/webkit2gtk-4.1

apps:
  whodb:
    command: bin/whodb
    desktop: share/applications/whodb.desktop
    environment:
      # WebKit settings for Wails app to work in snap
      WEBKIT_DISABLE_COMPOSITING_MODE: "1"
      WEBKIT_DISABLE_SANDBOX_THIS_IS_DANGEROUS: "1"
      WEBKIT_DISABLE_DMABUF_RENDERER: "1"
      # Critical for loading embedded assets in Wails
      WEBKIT_ALLOW_FILE_ACCESS_FROM_FILE_URLS: "1"
      WEBKIT_ALLOW_UNIVERSAL_ACCESS_FROM_FILE_URLS: "1"
      WEBKIT_DISABLE_WEB_SECURITY: "1"
      # Force software rendering for compatibility
      GDK_BACKEND: "x11"
      GTK_USE_PORTAL: "0"
      WEBKIT_FORCE_SINGLE_PROCESS: "1"
      LIBGL_ALWAYS_SOFTWARE: "1"
      EGL_PLATFORM: "x11"
      __EGL_VENDOR_LIBRARY_DIRS: "$SNAP/usr/share/glvnd/egl_vendor.d:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/GL/egl_vendor.d"
      LIBGL_DRIVERS_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri"
      __GLX_VENDOR_LIBRARY_NAME: "mesa"
      MESA_LOADER_DRIVER_OVERRIDE: "swrast"
      LD_LIBRARY_PATH: "$SNAP/usr/lib:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1:$SNAP/lib:$SNAP/lib/$SNAPCRAFT_ARCH_TRIPLET:$LD_LIBRARY_PATH"
      GI_TYPELIB_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/girepository-1.0:$SNAP/usr/lib/girepository-1.0:$GI_TYPELIB_PATH"
      WEBKIT_EXEC_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1"
      WEBKIT2_EXEC_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1"
      GTK_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-3.0"
      GTK_IM_MODULE_DIR: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-3.0/3.0.0/immodules"
      GDK_PIXBUF_MODULE_FILE: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache"
      GDK_PIXBUF_MODULEDIR: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders"
      FONTCONFIG_PATH: "$SNAP/etc/fonts"
      FONTCONFIG_FILE: "$SNAP/etc/fonts/fonts.conf"
    plugs:
      - desktop
      - desktop-legacy
      - wayland
      - x11
      - gsettings
      - network
      - network-bind
      - opengl
      - browser-support
      - audio-playback
      - unity7
      - home

parts:
  # Build Node/frontend dependencies first
  frontend:
    plugin: nil
    source: frontend
    source-type: local
    build-packages:
      - curl
      - ca-certificates
      - gnupg
    build-environment:
      # Skip Cypress binary installation - not needed for production builds
      - CYPRESS_INSTALL_BINARY: "0"
    override-build: |
      # Install Node.js
      curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
      apt-get install -y nodejs

      # Install pnpm
      npm install -g pnpm

      # Build frontend (Cypress binary will be skipped)
      pnpm install
      pnpm run build:ce

      # Stage the build output for the next part
      mkdir -p $SNAPCRAFT_PART_INSTALL/frontend-dist
      cp -r build/* $SNAPCRAFT_PART_INSTALL/frontend-dist/

  versioner:
    plugin: nil
    override-pull: |
      # Read version from .snap_version file created by GitHub Actions
      # The file is in the project root
      VERSION_FILE="${SNAPCRAFT_PROJECT_DIR}/.snap_version"

      if [ -f "$VERSION_FILE" ]; then
        VERSION=$(cat "$VERSION_FILE")
        snapcraftctl set-version "$VERSION"
        echo "Version set to: $VERSION"
      else
        echo "ERROR: $VERSION_FILE not found"
        echo "This file must be created with the version before building"
        exit 1
      fi

  whodb:
    after: [ frontend ]
    plugin: nil
    source: .
    source-type: local
    build-environment:
      - CGO_ENABLED: "1"
      - PATH: "/snap/go/current/bin:$PATH"
      - GOPATH: "$HOME/go"
      - GOWORK: "$PWD/go.work.desktop-ce"
    build-snaps:
      - go/latest/stable
    build-packages:
      - gcc
      - g++
      - libgtk-3-dev
      - libwebkit2gtk-4.1-dev
      - pkg-config
      - upx-ucl
      - build-essential
    stage-packages:
      # Core system libraries for core24
      - libc6
      - libgcc-s1
      - libstdc++6
      # GTK and WebKit core
      - libgtk-3-0
      - libwebkit2gtk-4.1-0
      - libjavascriptcoregtk-4.1-0
      - gir1.2-webkit2-4.1
      - gir1.2-javascriptcoregtk-4.1
      # X11 and display libraries
      - libx11-6
      - libx11-xcb1
      - libxau6
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxdmcp6
      - libxext6
      - libxfixes3
      - libxi6
      - libxinerama1
      - libxrandr2
      - libxrender1
      - libxcb1
      - libxcb-render0
      - libxcb-shm0
      - libxcb-randr0
      - libxkbcommon0
      # OpenGL and rendering
      - libegl1
      - libgl1
      - libglx0
      - libglvnd0
      - libglu1-mesa
      - libgl1-mesa-dri
      - libgbm1
      - libepoxy0
      # GTK and Cairo dependencies
      - libgdk-pixbuf-2.0-0
      - libgdk-pixbuf2.0-bin
      - libcairo2
      - libcairo-gobject2
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libatk1.0-0
      - libatk-bridge2.0-0
      - libatspi2.0-0
      - libpixman-1-0
      - librsvg2-2
      - librsvg2-common
      # Text rendering and fonts
      - libfontconfig1
      - libfreetype6
      - libharfbuzz0b
      - libharfbuzz-icu0
      - libfribidi0
      - libthai0
      - libdatrie1
      - libgraphite2-3
      - fontconfig
      - fontconfig-config
      - fonts-dejavu-core
      - fonts-liberation
      # Media and codecs
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - libgstreamer-gl1.0-0
      - gstreamer1.0-plugins-base
      - gstreamer1.0-plugins-good
      - gstreamer1.0-gl
      - liborc-0.4-0
      - libjpeg-turbo8
      - liblcms2-2
      # Wayland support
      - libwayland-client0
      - libwayland-cursor0
      - libwayland-egl1
      - libwayland-server0
      # Network and security
      - libsoup-3.0-0
      - libsecret-1-0
      - libpsl5
      - libnghttp2-14
      # Other dependencies
      - libcanberra-gtk3-module
      - libcanberra-gtk3-0
      - libcanberra0
      - libenchant-2-2
      - libhyphen0
      - libxml2
      - libxslt1.1
      - libgudev-1.0-0
      - libevdev2
      - libmanette-0.2-0
      - libatomic1
      # Additional WebKit dependencies
      - libicu74
      - libsqlite3-0
      - libwoff1
      - libnotify4
      - libgles2
      - libdrm2
      - libbrotli1
      - libgcrypt20
      - libgpg-error0
      - libsystemd0
      - libnss3
      - libnspr4
      - libxtst6
      - libxss1
      # DBus support
      - libdbus-1-3
      - dbus
      - dbus-x11
    prime:
      # Include the whodb binary
      - bin/whodb
      # Include all libraries
      - lib/**
      - usr/lib/**
      # Explicitly include WebKit subprocess executables from both possible locations
      - usr/libexec/webkit2gtk-4.1/**
      - usr/lib/*/webkit2gtk-4.1/**
      # Include GObject introspection files
      - usr/share/gir-1.0/**
      # Include locale data for proper internationalization
      - usr/share/locale/**
      # Include MIME type data
      - usr/share/mime/**
      # Include Mesa/EGL configuration
      - usr/share/glvnd/**
      - usr/share/vulkan/**
      - etc/glvnd/**
      # Include font files and configuration
      - usr/share/fonts/**
      - etc/fonts/**
      # Exclude unnecessary libraries to reduce snap size
      - -usr/lib/*/caca/libgl_plugin.so.*
      - -usr/lib/*/libcaca++.so.*
      - -usr/lib/*/libcolordprivate.so.*
      - -usr/lib/*/libdconf.so.*
      - -usr/lib/*/libexslt.so.*
      - -usr/lib/*/libgstcheck-1.0.so.*
      - -usr/lib/*/libgstcontroller-1.0.so.*
      - -usr/lib/*/libicuio.so.*
      - -usr/lib/*/libicutest.so.*
      - -usr/lib/*/libjacknet.so.*
      - -usr/lib/*/libjackserver.so.*
      - -usr/lib/*/liborc-test-0.4.so.*
      - -usr/lib/*/libpulse-simple.so.*
      - -usr/lib/*/libunwind-*.so.*
      - -usr/lib/*/libwoff2enc.so.*
    override-build: |
      # Copy frontend build from previous part
      mkdir -p desktop-ce/frontend/dist
      cp -r $SNAPCRAFT_STAGE/frontend-dist/* desktop-ce/frontend/dist/

      # Install Wails
      go install github.com/wailsapp/wails/v2/cmd/wails@latest
      export PATH=$PATH:$HOME/go/bin

      # Change to desktop-ce directory (just like other builds do)
      cd desktop-ce

      # Build the desktop app - Ubuntu 24.04 uses webkit2gtk-4.1, so we need the webkit2_41 tag
      # Add nosandbox tag to help with snap environment
      GOWORK=$PWD/../go.work.desktop-ce wails build -clean -tags desktop,production,webkit2_41,nosandbox,!ee -ldflags="-s -w" -o whodb

      # Install the binary
      install -D -m755 build/bin/whodb $SNAPCRAFT_PART_INSTALL/bin/whodb

  desktop-file:
    plugin: dump
    source: linux
    override-build: |
      install -D whodb.desktop $CRAFT_PART_INSTALL/share/applications/whodb.desktop
      install -D icon.png $CRAFT_PART_INSTALL/share/icons/hicolor/256x256/apps/whodb.png
      install -D icon.png $CRAFT_PART_INSTALL/meta/gui/whodb.png
    prime:
      - share/applications/whodb.desktop
      - share/icons/hicolor/256x256/apps/whodb.png
      - meta/gui/whodb.png
